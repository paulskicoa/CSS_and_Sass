.row {
  /* 1140 px used as standard max grid width */
  max-width: $grid-width;
  /* center block el inside another block el */
  margin: 0 auto;
  
  /* select everything except last child */
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
     }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
   }

  @include clearfix;

  /* selects all els that have class attr beginning with 'col-' */
 [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
       margin-right: 0;
       margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
 }

  .col-1-of-2 {
    /* In native CSS calc() you can mix units, but not in SCSS's version
    These calculations have to occur when page is about to rendered
    in user's browser. Must wrap our Sass var using hash and brackets */
    width: calc(1/2 * (100% - #{$gutter-horizontal}));
  }

  .col-1-of-3 {
    width: calc(1/3 * (100% - 2 * #{$gutter-horizontal}));
  }

  .col-2-of-3 {
    width: calc(2/3 * (100% - 2 * #{$gutter-horizontal}) + #{$gutter-horizontal});
  }
  
  .col-1-of-4 {
    width: calc(1/4 * (100% - 3 * #{$gutter-horizontal}));
  }
  
  .col-2-of-4 {
    width: calc(2/4 * (100% - 3 * #{$gutter-horizontal}) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3/4 * (100% - 3 * #{$gutter-horizontal}) + 2 * #{$gutter-horizontal});
  }

}
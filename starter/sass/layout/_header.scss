.header {
  height: 95vh;
  /* First bg image goes on top of second */
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, .8),
    rgba($color-primary-dark, .8)),
  url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;

  /* Remove part of the box. what we pass to polygon is what's drawn.
  Coordinates given are for top left, tr, br, bl corners of our shape.
  The grid is the element this is in (header here). x increases to right
  and y increases down, so 0 0 is top left corner of element*/
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; /* since we have a child positioned absolutely */

  /* if screen is below 600px wide or low dpi, doesn't make sense to display hi-res version
  a comma in the media query means 'or', so it'll display the hi-res version if dpi >= 192 AND width >= 600,
  OR if width >= 2000 (regardless of dpi for that one)
  */
  @media (min-resolution: 192dpi) and (min-width: 37.5em),
  (min-width: 125em) {
    background-image: linear-gradient(
      to right bottom,
      rgba($color-secondary-light, .8),
      rgba($color-secondary-dark, .8)),
    url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }
  
  &__text-box {
    /* center within header */
    /* shift the left and top by -50% relative to the
    width of the text box itself. this will make it so the text box is
    centered */
    @include center-both;
    
    /* center inline/inline-block child elements (which are treated as text) */
    text-align: center;
  }
}
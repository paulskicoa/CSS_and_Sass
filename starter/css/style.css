/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* By default, browsers apply some margin
or padding. We set these to 0 to ensure the
same starting point for all browsers */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Properties related to font are usually inherited,
so we set these in the body */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400; /* normal */
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* First bg image goes on top of second */
  background-image: linear-gradient(
    to right bottom,
  rgba(126, 213, 111, 0.8),
  rgba(40, 180, 133, 0.8)),
  url(../img/hero.jpg);
  background-size: cover;
  background-position: top;

  /* Remove part of the box. what we pass to polygon is what's drawn.
  Coordinates given are for top left, tr, br, bl corners of our shape.
  The grid is the element this is in (header here). x increases to right
  and y increases down, so 0 0 is top left corner of element*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; /* since we have a child positioned absolutely */
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  /* center within header */
  position: absolute;
  top: 50%;
  left: 50%;
  /* shift the left and top by -50% relative to the
  width of the text box itself. this will make it so the text box is
  centered */
  transform: translate(-50%, -50%);
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
}

.heading-primary-main {
  /* Spans are inline elements by default, but we want
  our main and sub to be block so they get their own line
  and take up full width available to them */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
}